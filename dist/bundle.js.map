{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.htm","webpack:///./src/js/index.ts","webpack:///./src/js/orbit.ts","webpack:///./src/js/planet.ts","webpack:///./src/js/star.ts","webpack:///./src/js/vector.ts","webpack:///./src/scss/styles.scss"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,iBAAiB,qBAAuB,e;;;;;;;;;;;;ACAxC;AAAA;AAAA;AAAA;AAA8B;AACI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAAI;AAC5B,8BAA8B,8CAAM;AACpC,8BAA8B,8CAAM;AACpC,8BAA8B,8CAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACiB;AAClB;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8CAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8CAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8CAAM;AACpC,+BAA+B,8CAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8CAAM;AACpC,+BAA+B,8CAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACgB;;;;;;;;;;;;;AC5DjB;AAAA;AAAA;AAAA;AAAgC;AACE;AAClC;AACA;AACA,4BAA4B,8CAAM;AAClC,yBAAyB,4CAAK;AAC9B,uBAAuB,8CAAM;AAC7B;AACA;AACA,qCAAqC,8CAAM;AAC3C,4CAA4C,8CAAM;AAClD,0DAA0D,8CAAM;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,8CAAM;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAM;AAC5B,yDAAyD,8CAAM;AAC/D,4CAA4C,8CAAM;AAClD;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAM;AAC5B,mBAAmB,8CAAM;AACzB;AACA;AACA,CAAC;AACiB;;;;;;;;;;;;;ACnDlB;AAAA;AAAA;AAAkC;AAClC;AACA;AACA;AACA;AACA,uBAAuB,8CAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACe;;;;;;;;;;;;;ACjBhB;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACiB;;;;;;;;;;;;ACrBlB,iBAAiB,qBAAuB,gB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = __webpack_public_path__ + \"index.htm\";","import { Star } from \"./star\";\r\nimport { Planet } from \"./planet\";\r\nvar Engine = /** @class */ (function () {\r\n    function Engine() {\r\n        this.date = new Date();\r\n        this.timeZero = this.date.getTime();\r\n        this.objects = new Array();\r\n        this.canvas = document.getElementById(\"content\");\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.canvas.height = window.innerHeight - 20;\r\n        this.canvas.width = window.innerWidth - 20;\r\n        this.height = this.canvas.height;\r\n        this.width = this.canvas.width;\r\n        this.star = new Star(0.6650467262205, this.height, this.width);\r\n        this.objects.push(new Planet(0.4263496513594, this.star.pos, 3, 5.01, 90));\r\n        this.objects.push(new Planet(0.18263496513594, this.star.pos, 5, 7, 50));\r\n        this.objects.push(new Planet(0.08263496513594, this.star.pos, 3, 10, 180));\r\n        this.calcAlpha();\r\n        this.loop();\r\n    }\r\n    Engine.prototype.loop = function () {\r\n        var _this = this;\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.date = new Date();\r\n        this.timeNow = this.date.getTime();\r\n        var time = this.timeNow - this.timeZero;\r\n        this.timeZero = this.timeNow;\r\n        this.star.draw(this.ctx, this.alpha);\r\n        this.objects.forEach(function (element) {\r\n            element.draw(_this.ctx, _this.alpha, _this.star.pos);\r\n            element.update(time, _this.star.pos, _this.alpha);\r\n        });\r\n        window.requestAnimationFrame(this.loop.bind(this));\r\n    };\r\n    Engine.prototype.calcAlpha = function () {\r\n        var totalHeight = 0;\r\n        this.objects.forEach(function (element) {\r\n            var i = element.getOrbit().calcMajor();\r\n            if (i > totalHeight)\r\n                totalHeight = i;\r\n        });\r\n        //totalHeight += 0.5;\r\n        this.alpha = this.height / (3 * totalHeight);\r\n    };\r\n    return Engine;\r\n}());\r\nexport { Engine };\r\nnew Engine();\r\n","import { Vector } from \"./vector\";\r\nvar Orbit = /** @class */ (function () {\r\n    function Orbit(per, aph, starPos) {\r\n        this.perihelion = per;\r\n        this.aphelion = aph;\r\n        this.eccentricity = this.calcEccentricity();\r\n        this.minor = this.calcMinor();\r\n        this.major = this.calcMajor();\r\n        this.fociConstant = this.calcFociConstant();\r\n        this.orbitOrigo = new Vector(starPos.x + this.fociConstant, starPos.y);\r\n    }\r\n    Orbit.prototype.draw = function (ctx, alpha, starPos, planetPos, rotation) {\r\n        ctx.translate(starPos.x, starPos.y);\r\n        ctx.rotate(rotation * Math.PI / 180);\r\n        ctx.translate(-starPos.x, -starPos.y);\r\n        ctx.beginPath();\r\n        this.orbitOrigo = new Vector(starPos.x + this.fociConstant * alpha, starPos.y);\r\n        ctx.ellipse(starPos.x + this.fociConstant * alpha, starPos.y, this.major * alpha, this.minor * alpha, 0, 0, Math.PI * 2);\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.stroke();\r\n        ctx.translate(starPos.x, starPos.y);\r\n        ctx.rotate(-rotation * Math.PI / 180);\r\n        ctx.translate(-starPos.x, -starPos.y);\r\n    };\r\n    Orbit.prototype.calcMinor = function () {\r\n        var minor = Math.sqrt(this.aphelion * this.perihelion);\r\n        return minor;\r\n    };\r\n    Orbit.prototype.calcMajor = function () {\r\n        var major = (this.aphelion + this.perihelion) / 2;\r\n        return major;\r\n    };\r\n    Orbit.prototype.calcFociConstant = function () {\r\n        var constant = Math.sqrt(Math.pow(this.major, 2) - Math.pow(this.minor, 2));\r\n        return constant;\r\n    };\r\n    Orbit.prototype.calcSemiLatus = function (planetPos, starPos) {\r\n        var origoToStar = new Vector(starPos.x - this.orbitOrigo.x, starPos.y - this.orbitOrigo.y);\r\n        var starToPlanet = new Vector(planetPos.x - starPos.x, planetPos.y - starPos.y);\r\n        var angle = origoToStar.angle(starToPlanet);\r\n        this.semiLatusRectum = starToPlanet.magnitude() * (1 + Math.cos(angle));\r\n        //console.log(this.semiLatusRectum);\r\n    };\r\n    Orbit.prototype.calcEccentricity = function () {\r\n        var eccentricity = (this.aphelion - this.perihelion) / (this.aphelion + this.perihelion);\r\n        return eccentricity;\r\n    };\r\n    Orbit.prototype.calcHeliocentricAngle = function (planetPos, starPos) {\r\n        var origoToStar = new Vector(starPos.x - this.orbitOrigo.x, starPos.y - this.orbitOrigo.y);\r\n        var starToPlanet = new Vector(planetPos.x - starPos.x, planetPos.y - starPos.y);\r\n        var angle = origoToStar.angle(starToPlanet);\r\n        return angle;\r\n    };\r\n    Orbit.prototype.calcDist = function (planetPos, starPos) {\r\n        var angle = this.calcHeliocentricAngle(planetPos, starPos);\r\n        var dist = this.semiLatusRectum / (1 + this.eccentricity * Math.cos(angle));\r\n        return dist;\r\n    };\r\n    return Orbit;\r\n}());\r\nexport { Orbit };\r\n","import { Orbit } from \"./orbit\";\r\nimport { Vector } from \"./vector\";\r\nvar Planet = /** @class */ (function () {\r\n    function Planet(radius, starPos, per, aph, rotation) {\r\n        this.velocity = new Vector(0, 0);\r\n        this.orbit = new Orbit(per, aph, starPos);\r\n        this.pos = new Vector(this.orbit.fociConstant, this.orbit.minor);\r\n        this.radius = radius;\r\n        this.rotation = rotation;\r\n        this.orbit.calcSemiLatus(new Vector(starPos.x + this.pos.x, starPos.y - this.pos.y), starPos);\r\n        this.dist = this.orbit.calcDist(new Vector(starPos.x + this.pos.x, starPos.y - this.pos.y), starPos);\r\n        this.angle = this.orbit.calcHeliocentricAngle(new Vector(starPos.x + this.pos.x, starPos.y - this.pos.y), starPos);\r\n        this.direction = this.calcDirection(starPos);\r\n    }\r\n    Planet.prototype.draw = function (ctx, alpha, starPos) {\r\n        this.orbit.draw(ctx, alpha, starPos, this.pos, this.rotation);\r\n        ctx.translate(starPos.x, starPos.y);\r\n        ctx.rotate(this.rotation * Math.PI / 180);\r\n        ctx.translate(-starPos.x, -starPos.y);\r\n        ctx.beginPath();\r\n        ctx.ellipse(starPos.x + this.pos.x * alpha, starPos.y + this.pos.y * alpha, this.radius * alpha, this.radius * alpha, 0, 0, Math.PI * 2);\r\n        ctx.translate(starPos.x, starPos.y);\r\n        ctx.rotate(-this.rotation * Math.PI / 180);\r\n        ctx.translate(-starPos.x, -starPos.y);\r\n        ctx.fillStyle = 'black';\r\n        ctx.fill();\r\n    };\r\n    Planet.prototype.update = function (time, starPos, alpha) {\r\n        this.dist = this.orbit.calcDist(new Vector(starPos.x + this.pos.x, starPos.y - this.pos.y), starPos);\r\n        var angleOffset = 1 / (this.dist) * time / 1000;\r\n        this.angle += angleOffset;\r\n        this.pos.x = (this.orbit.major * Math.cos(this.angle) + this.orbit.major * this.orbit.eccentricity);\r\n        this.pos.y = (this.orbit.minor * Math.sin(this.angle));\r\n    };\r\n    Planet.prototype.getOrbit = function () {\r\n        return this.orbit;\r\n    };\r\n    Planet.prototype.calcVelocity = function (starPos) {\r\n        var vel = new Vector(0, 0);\r\n        var angle = this.orbit.calcHeliocentricAngle(new Vector(starPos.x - this.pos.x, starPos.y - this.pos.y), starPos);\r\n        this.dist = this.orbit.calcDist(new Vector(starPos.x - this.pos.x, starPos.y - this.pos.y), starPos);\r\n        vel.x = (Math.sqrt(0.001 * this.orbit.major) / this.dist) * (Math.sin(angle));\r\n        vel.y = (Math.sqrt(0.001 * this.orbit.major) / this.dist) * (Math.sqrt(1 - Math.pow(this.orbit.eccentricity, 2)) * Math.cos(angle));\r\n        return vel;\r\n    };\r\n    Planet.prototype.calcDirection = function (starPos) {\r\n        var dir = new Vector(this.pos.x - starPos.x, this.pos.y - starPos.y);\r\n        return new Vector(dir.x / dir.magnitude(), dir.y / dir.magnitude());\r\n    };\r\n    return Planet;\r\n}());\r\nexport { Planet };\r\n","import { Vector } from \"./vector\";\r\nvar Star = /** @class */ (function () {\r\n    //Radii in AU\r\n    function Star(radius, height, width) {\r\n        this.radius = radius;\r\n        this.pos = new Vector(width / 2, height / 2);\r\n    }\r\n    Star.prototype.draw = function (ctx, alpha) {\r\n        ctx.beginPath();\r\n        ctx.ellipse(this.pos.x, this.pos.y, this.radius * alpha, this.radius * alpha, 0, 0, 2 * Math.PI);\r\n        ctx.fillStyle = 'yellow';\r\n        ctx.fill();\r\n    };\r\n    Star.prototype.update = function (time) {\r\n    };\r\n    return Star;\r\n}());\r\nexport { Star };\r\n","var Vector = /** @class */ (function () {\r\n    function Vector(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Vector.prototype.magnitude = function () {\r\n        var mag = Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n        //console.log(mag);\r\n        return mag;\r\n    };\r\n    Vector.prototype.dot = function (otherVector) {\r\n        var dot = this.x * otherVector.x + this.y * otherVector.y;\r\n        //console.log(dot)\r\n        return dot;\r\n    };\r\n    Vector.prototype.angle = function (otherVector) {\r\n        var dot = this.dot(otherVector);\r\n        return Math.acos(dot / (this.magnitude() * otherVector.magnitude()));\r\n    };\r\n    return Vector;\r\n}());\r\nexport { Vector };\r\n","module.exports = __webpack_public_path__ + \"bundle.css\";"],"sourceRoot":""}